//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Ingame"",
            ""id"": ""deed663b-9219-4a40-b2e1-50d2ca1a37f2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""bb5d14b5-07d4-4065-8af1-a439e004f021"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack01"",
                    ""type"": ""Button"",
                    ""id"": ""1f5d9b23-b045-41bb-b9ca-d276c6637194"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""a4ab294c-10da-4436-9e81-ddad9c34e32d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack02Focus"",
                    ""type"": ""Button"",
                    ""id"": ""260bfeea-8e73-4f72-838d-08fe9bb04979"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimWithGamepad"",
                    ""type"": ""Value"",
                    ""id"": ""ab448cd9-d818-4348-b2be-e8a9b6a4304b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimWithMouse"",
                    ""type"": ""Value"",
                    ""id"": ""d4fb2f83-8c1b-45aa-8643-528011d50d26"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack02Execute"",
                    ""type"": ""Button"",
                    ""id"": ""f4fcfdb0-fb06-49ac-a0fd-ccd43089d1f3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""ce5104fb-d49d-4887-a128-31b00bdb5aa9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d69cebbb-b62d-4b97-9495-46271d0b5e62"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ef7dc08b-4cb2-485f-9d48-4a21b598682b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7559f62c-908b-4613-a4b5-c6e107e0c83c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""33b5a8b1-af6c-4bef-a07d-7ade0bd070ea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2e0f4376-a396-44f9-ba4a-98584310da2f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bd96e7f-2d63-4899-a226-4389699d0b59"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""Attack01"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f06de819-9875-462f-9dfd-5431de73d047"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Attack01"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34fca272-7518-49a3-920f-cbbe1c986232"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5528a5ca-5a3b-4e88-aa06-5baf87203f4c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe18b3f2-16b6-4453-8cfd-09f9c90ac850"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""Attack02Focus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b915c1a7-18b6-432a-b6cb-bb872b8e9b59"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";GamePad"",
                    ""action"": ""Attack02Focus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59270ab7-25fb-404f-b4fd-191e072295a3"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";GamePad"",
                    ""action"": ""AimWithGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a227e537-9850-4ab4-bbad-144aac6f48b1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""AimWithMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e5e60c2-cf90-4d32-8c61-b22c2b057b4a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""Attack02Execute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3891a246-7f7b-48c8-98c9-31e6711015a6"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";GamePad"",
                    ""action"": ""Attack02Execute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Ingame
        m_Ingame = asset.FindActionMap("Ingame", throwIfNotFound: true);
        m_Ingame_Movement = m_Ingame.FindAction("Movement", throwIfNotFound: true);
        m_Ingame_Attack01 = m_Ingame.FindAction("Attack01", throwIfNotFound: true);
        m_Ingame_Roll = m_Ingame.FindAction("Roll", throwIfNotFound: true);
        m_Ingame_Attack02Focus = m_Ingame.FindAction("Attack02Focus", throwIfNotFound: true);
        m_Ingame_AimWithGamepad = m_Ingame.FindAction("AimWithGamepad", throwIfNotFound: true);
        m_Ingame_AimWithMouse = m_Ingame.FindAction("AimWithMouse", throwIfNotFound: true);
        m_Ingame_Attack02Execute = m_Ingame.FindAction("Attack02Execute", throwIfNotFound: true);
    }

    ~@PlayerInputActions()
    {
        UnityEngine.Debug.Assert(!m_Ingame.enabled, "This will cause a leak and performance issues, PlayerInputActions.Ingame.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ingame
    private readonly InputActionMap m_Ingame;
    private List<IIngameActions> m_IngameActionsCallbackInterfaces = new List<IIngameActions>();
    private readonly InputAction m_Ingame_Movement;
    private readonly InputAction m_Ingame_Attack01;
    private readonly InputAction m_Ingame_Roll;
    private readonly InputAction m_Ingame_Attack02Focus;
    private readonly InputAction m_Ingame_AimWithGamepad;
    private readonly InputAction m_Ingame_AimWithMouse;
    private readonly InputAction m_Ingame_Attack02Execute;
    public struct IngameActions
    {
        private @PlayerInputActions m_Wrapper;
        public IngameActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Ingame_Movement;
        public InputAction @Attack01 => m_Wrapper.m_Ingame_Attack01;
        public InputAction @Roll => m_Wrapper.m_Ingame_Roll;
        public InputAction @Attack02Focus => m_Wrapper.m_Ingame_Attack02Focus;
        public InputAction @AimWithGamepad => m_Wrapper.m_Ingame_AimWithGamepad;
        public InputAction @AimWithMouse => m_Wrapper.m_Ingame_AimWithMouse;
        public InputAction @Attack02Execute => m_Wrapper.m_Ingame_Attack02Execute;
        public InputActionMap Get() { return m_Wrapper.m_Ingame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(IngameActions set) { return set.Get(); }
        public void AddCallbacks(IIngameActions instance)
        {
            if (instance == null || m_Wrapper.m_IngameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_IngameActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Attack01.started += instance.OnAttack01;
            @Attack01.performed += instance.OnAttack01;
            @Attack01.canceled += instance.OnAttack01;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Attack02Focus.started += instance.OnAttack02Focus;
            @Attack02Focus.performed += instance.OnAttack02Focus;
            @Attack02Focus.canceled += instance.OnAttack02Focus;
            @AimWithGamepad.started += instance.OnAimWithGamepad;
            @AimWithGamepad.performed += instance.OnAimWithGamepad;
            @AimWithGamepad.canceled += instance.OnAimWithGamepad;
            @AimWithMouse.started += instance.OnAimWithMouse;
            @AimWithMouse.performed += instance.OnAimWithMouse;
            @AimWithMouse.canceled += instance.OnAimWithMouse;
            @Attack02Execute.started += instance.OnAttack02Execute;
            @Attack02Execute.performed += instance.OnAttack02Execute;
            @Attack02Execute.canceled += instance.OnAttack02Execute;
        }

        private void UnregisterCallbacks(IIngameActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Attack01.started -= instance.OnAttack01;
            @Attack01.performed -= instance.OnAttack01;
            @Attack01.canceled -= instance.OnAttack01;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Attack02Focus.started -= instance.OnAttack02Focus;
            @Attack02Focus.performed -= instance.OnAttack02Focus;
            @Attack02Focus.canceled -= instance.OnAttack02Focus;
            @AimWithGamepad.started -= instance.OnAimWithGamepad;
            @AimWithGamepad.performed -= instance.OnAimWithGamepad;
            @AimWithGamepad.canceled -= instance.OnAimWithGamepad;
            @AimWithMouse.started -= instance.OnAimWithMouse;
            @AimWithMouse.performed -= instance.OnAimWithMouse;
            @AimWithMouse.canceled -= instance.OnAimWithMouse;
            @Attack02Execute.started -= instance.OnAttack02Execute;
            @Attack02Execute.performed -= instance.OnAttack02Execute;
            @Attack02Execute.canceled -= instance.OnAttack02Execute;
        }

        public void RemoveCallbacks(IIngameActions instance)
        {
            if (m_Wrapper.m_IngameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IIngameActions instance)
        {
            foreach (var item in m_Wrapper.m_IngameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_IngameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public IngameActions @Ingame => new IngameActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    public interface IIngameActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack01(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnAttack02Focus(InputAction.CallbackContext context);
        void OnAimWithGamepad(InputAction.CallbackContext context);
        void OnAimWithMouse(InputAction.CallbackContext context);
        void OnAttack02Execute(InputAction.CallbackContext context);
    }
}
